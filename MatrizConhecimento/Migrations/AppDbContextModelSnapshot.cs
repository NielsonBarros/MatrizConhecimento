// <auto-generated />
using System;
using MatrizConhecimento.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MatrizConhecimento.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MatrizConhecimento.Models.Matter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.HasIndex("UserId");

                    b.ToTable("Matters");
                });

            modelBuilder.Entity("MatrizConhecimento.Models.Rating", b =>
                {
                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<int>("MatterId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RatingDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RatingHistoryId")
                        .HasColumnType("int");

                    b.Property<short?>("Score")
                        .HasColumnType("smallint");

                    b.HasKey("TopicId", "MatterId", "UserId");

                    b.HasIndex("MatterId");

                    b.HasIndex("RatingHistoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("MatrizConhecimento.Models.RatingHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("MatterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RatingDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("Score")
                        .HasColumnType("smallint");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MatterId");

                    b.HasIndex("TopicId");

                    b.HasIndex("UserId");

                    b.ToTable("RatingHistories");
                });

            modelBuilder.Entity("MatrizConhecimento.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("MatrizConhecimento.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MatrizConhecimento.Models.Matter", b =>
                {
                    b.HasOne("MatrizConhecimento.Models.Topic", "Topic")
                        .WithMany("Matters")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrizConhecimento.Models.User", "User")
                        .WithMany("Matters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MatrizConhecimento.Models.Rating", b =>
                {
                    b.HasOne("MatrizConhecimento.Models.Matter", "Matter")
                        .WithMany("Ratings")
                        .HasForeignKey("MatterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrizConhecimento.Models.RatingHistory", "RatingHistory")
                        .WithMany("Ratings")
                        .HasForeignKey("RatingHistoryId");

                    b.HasOne("MatrizConhecimento.Models.Topic", "Topic")
                        .WithMany("Ratings")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrizConhecimento.Models.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matter");

                    b.Navigation("RatingHistory");

                    b.Navigation("Topic");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MatrizConhecimento.Models.RatingHistory", b =>
                {
                    b.HasOne("MatrizConhecimento.Models.Matter", "Matter")
                        .WithMany("RatingHistories")
                        .HasForeignKey("MatterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrizConhecimento.Models.Topic", "Topic")
                        .WithMany("RatingHistories")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrizConhecimento.Models.User", "User")
                        .WithMany("RatingHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matter");

                    b.Navigation("Topic");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MatrizConhecimento.Models.Topic", b =>
                {
                    b.HasOne("MatrizConhecimento.Models.User", "User")
                        .WithMany("Topics")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MatrizConhecimento.Models.Matter", b =>
                {
                    b.Navigation("RatingHistories");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("MatrizConhecimento.Models.RatingHistory", b =>
                {
                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("MatrizConhecimento.Models.Topic", b =>
                {
                    b.Navigation("Matters");

                    b.Navigation("RatingHistories");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("MatrizConhecimento.Models.User", b =>
                {
                    b.Navigation("Matters");

                    b.Navigation("RatingHistories");

                    b.Navigation("Ratings");

                    b.Navigation("Topics");
                });
#pragma warning restore 612, 618
        }
    }
}
